import{f as P,r as i,g as A,j as a,P as N,h as v,i as R,R as ye,S as he,k as Re,l as Ce,F as _e,D as je,m as Ee,n as Pe,o as h,p as Oe,q as be,e as f}from"./index-D2TPxXiu.js";import{b as O}from"./button-GmKsRPRy.js";var C="Dialog",[b,w]=P(C),[we,g]=b(C),T=e=>{const{__scopeDialog:t,children:o,open:r,defaultOpen:n,onOpenChange:s,modal:l=!0}=e,c=i.useRef(null),u=i.useRef(null),[d=!1,m]=Pe({prop:r,defaultProp:n,onChange:s});return a.jsx(we,{scope:t,triggerRef:c,contentRef:u,contentId:h(),titleId:h(),descriptionId:h(),open:d,onOpenChange:m,onOpenToggle:i.useCallback(()=>m(Ne=>!Ne),[m]),modal:l,children:o})};T.displayName=C;var I="DialogTrigger",S=i.forwardRef((e,t)=>{const{__scopeDialog:o,...r}=e,n=g(I,o),s=A(t,n.triggerRef);return a.jsx(N.button,{type:"button","aria-haspopup":"dialog","aria-expanded":n.open,"aria-controls":n.contentId,"data-state":E(n.open),...r,ref:s,onClick:v(e.onClick,n.onOpenToggle)})});S.displayName=I;var _="DialogPortal",[Te,M]=b(_,{forceMount:void 0}),$=e=>{const{__scopeDialog:t,forceMount:o,children:r,container:n}=e,s=g(_,t);return a.jsx(Te,{scope:t,forceMount:o,children:i.Children.map(r,l=>a.jsx(R,{present:o||s.open,children:a.jsx(Oe,{asChild:!0,container:n,children:l})}))})};$.displayName=_;var y="DialogOverlay",F=i.forwardRef((e,t)=>{const o=M(y,e.__scopeDialog),{forceMount:r=o.forceMount,...n}=e,s=g(y,e.__scopeDialog);return s.modal?a.jsx(R,{present:r||s.open,children:a.jsx(Ie,{...n,ref:t})}):null});F.displayName=y;var Ie=i.forwardRef((e,t)=>{const{__scopeDialog:o,...r}=e,n=g(y,o);return a.jsx(ye,{as:he,allowPinchZoom:!0,shards:[n.contentRef],children:a.jsx(N.div,{"data-state":E(n.open),...r,ref:t,style:{pointerEvents:"auto",...r.style}})})}),D="DialogContent",k=i.forwardRef((e,t)=>{const o=M(D,e.__scopeDialog),{forceMount:r=o.forceMount,...n}=e,s=g(D,e.__scopeDialog);return a.jsx(R,{present:r||s.open,children:s.modal?a.jsx(Se,{...n,ref:t}):a.jsx(Me,{...n,ref:t})})});k.displayName=D;var Se=i.forwardRef((e,t)=>{const o=g(D,e.__scopeDialog),r=i.useRef(null),n=A(t,o.contentRef,r);return i.useEffect(()=>{const s=r.current;if(s)return Re(s)},[]),a.jsx(W,{...e,ref:n,trapFocus:o.open,disableOutsidePointerEvents:!0,onCloseAutoFocus:v(e.onCloseAutoFocus,s=>{var l;s.preventDefault(),(l=o.triggerRef.current)==null||l.focus()}),onPointerDownOutside:v(e.onPointerDownOutside,s=>{const l=s.detail.originalEvent,c=l.button===0&&l.ctrlKey===!0;(l.button===2||c)&&s.preventDefault()}),onFocusOutside:v(e.onFocusOutside,s=>s.preventDefault())})}),Me=i.forwardRef((e,t)=>{const o=g(D,e.__scopeDialog),r=i.useRef(!1),n=i.useRef(!1);return a.jsx(W,{...e,ref:t,trapFocus:!1,disableOutsidePointerEvents:!1,onCloseAutoFocus:s=>{var l,c;(l=e.onCloseAutoFocus)==null||l.call(e,s),s.defaultPrevented||(r.current||(c=o.triggerRef.current)==null||c.focus(),s.preventDefault()),r.current=!1,n.current=!1},onInteractOutside:s=>{var u,d;(u=e.onInteractOutside)==null||u.call(e,s),s.defaultPrevented||(r.current=!0,s.detail.originalEvent.type==="pointerdown"&&(n.current=!0));const l=s.target;((d=o.triggerRef.current)==null?void 0:d.contains(l))&&s.preventDefault(),s.detail.originalEvent.type==="focusin"&&n.current&&s.preventDefault()}})}),W=i.forwardRef((e,t)=>{const{__scopeDialog:o,trapFocus:r,onOpenAutoFocus:n,onCloseAutoFocus:s,...l}=e,c=g(D,o),u=i.useRef(null),d=A(t,u);return Ce(),a.jsxs(a.Fragment,{children:[a.jsx(_e,{asChild:!0,loop:!0,trapped:r,onMountAutoFocus:n,onUnmountAutoFocus:s,children:a.jsx(je,{role:"dialog",id:c.contentId,"aria-describedby":c.descriptionId,"aria-labelledby":c.titleId,"data-state":E(c.open),...l,ref:d,onDismiss:()=>c.onOpenChange(!1)})}),a.jsxs(a.Fragment,{children:[a.jsx(Fe,{titleId:c.titleId}),a.jsx(We,{contentRef:u,descriptionId:c.descriptionId})]})]})}),j="DialogTitle",L=i.forwardRef((e,t)=>{const{__scopeDialog:o,...r}=e,n=g(j,o);return a.jsx(N.h2,{id:n.titleId,...r,ref:t})});L.displayName=j;var G="DialogDescription",z=i.forwardRef((e,t)=>{const{__scopeDialog:o,...r}=e,n=g(G,o);return a.jsx(N.p,{id:n.descriptionId,...r,ref:t})});z.displayName=G;var B="DialogClose",H=i.forwardRef((e,t)=>{const{__scopeDialog:o,...r}=e,n=g(B,o);return a.jsx(N.button,{type:"button",...r,ref:t,onClick:v(e.onClick,()=>n.onOpenChange(!1))})});H.displayName=B;function E(e){return e?"open":"closed"}var V="DialogTitleWarning",[$e,q]=Ee(V,{contentName:D,titleName:j,docsSlug:"dialog"}),Fe=({titleId:e})=>{const t=q(V),o=`\`${t.contentName}\` requires a \`${t.titleName}\` for the component to be accessible for screen reader users.

If you want to hide the \`${t.titleName}\`, you can wrap it with our VisuallyHidden component.

For more information, see https://radix-ui.com/primitives/docs/components/${t.docsSlug}`;return i.useEffect(()=>{e&&(document.getElementById(e)||console.error(o))},[o,e]),null},ke="DialogDescriptionWarning",We=({contentRef:e,descriptionId:t})=>{const r=`Warning: Missing \`Description\` or \`aria-describedby={undefined}\` for {${q(ke).contentName}}.`;return i.useEffect(()=>{var s;const n=(s=e.current)==null?void 0:s.getAttribute("aria-describedby");t&&n&&(document.getElementById(t)||console.warn(r))},[r,e,t]),null},Le=T,Ge=S,ze=$,Be=F,He=k,Ve=L,qe=z,Y=H,K="AlertDialog",[Ye,lt]=P(K,[w]),p=w(),U=e=>{const{__scopeAlertDialog:t,...o}=e,r=p(t);return a.jsx(Le,{...r,...o,modal:!0})};U.displayName=K;var Ke="AlertDialogTrigger",Ue=i.forwardRef((e,t)=>{const{__scopeAlertDialog:o,...r}=e,n=p(o);return a.jsx(Ge,{...n,...r,ref:t})});Ue.displayName=Ke;var Ze="AlertDialogPortal",Z=e=>{const{__scopeAlertDialog:t,...o}=e,r=p(t);return a.jsx(ze,{...r,...o})};Z.displayName=Ze;var Je="AlertDialogOverlay",J=i.forwardRef((e,t)=>{const{__scopeAlertDialog:o,...r}=e,n=p(o);return a.jsx(Be,{...n,...r,ref:t})});J.displayName=Je;var x="AlertDialogContent",[Qe,Xe]=Ye(x),Q=i.forwardRef((e,t)=>{const{__scopeAlertDialog:o,children:r,...n}=e,s=p(o),l=i.useRef(null),c=A(t,l),u=i.useRef(null);return a.jsx($e,{contentName:x,titleName:X,docsSlug:"alert-dialog",children:a.jsx(Qe,{scope:o,cancelRef:u,children:a.jsxs(He,{role:"alertdialog",...s,...n,ref:c,onOpenAutoFocus:v(n.onOpenAutoFocus,d=>{var m;d.preventDefault(),(m=u.current)==null||m.focus({preventScroll:!0})}),onPointerDownOutside:d=>d.preventDefault(),onInteractOutside:d=>d.preventDefault(),children:[a.jsx(be,{children:r}),a.jsx(tt,{contentRef:l})]})})})});Q.displayName=x;var X="AlertDialogTitle",ee=i.forwardRef((e,t)=>{const{__scopeAlertDialog:o,...r}=e,n=p(o);return a.jsx(Ve,{...n,...r,ref:t})});ee.displayName=X;var te="AlertDialogDescription",oe=i.forwardRef((e,t)=>{const{__scopeAlertDialog:o,...r}=e,n=p(o);return a.jsx(qe,{...n,...r,ref:t})});oe.displayName=te;var et="AlertDialogAction",ae=i.forwardRef((e,t)=>{const{__scopeAlertDialog:o,...r}=e,n=p(o);return a.jsx(Y,{...n,...r,ref:t})});ae.displayName=et;var re="AlertDialogCancel",ne=i.forwardRef((e,t)=>{const{__scopeAlertDialog:o,...r}=e,{cancelRef:n}=Xe(re,o),s=p(o),l=A(t,n);return a.jsx(Y,{...s,...r,ref:l})});ne.displayName=re;var tt=({contentRef:e})=>{const t=`\`${x}\` requires a description for the component to be accessible for screen reader users.

You can add a description to the \`${x}\` by passing a \`${te}\` component as a child, which also benefits sighted users by adding visible context to the dialog.

Alternatively, you can use your own component as a description by assigning it an \`id\` and passing the same value to the \`aria-describedby\` prop in \`${x}\`. If the description is confusing or duplicative for sighted users, you can use the \`@radix-ui/react-visually-hidden\` primitive as a wrapper around your description component.

For more information, see https://radix-ui.com/primitives/docs/components/alert-dialog`;return i.useEffect(()=>{var r;document.getElementById((r=e.current)==null?void 0:r.getAttribute("aria-describedby"))||console.warn(t)},[t,e]),null},ot=U,at=Z,se=J,ie=Q,le=ae,ce=ne,de=ee,ue=oe;const rt=ot,nt=at,ge=i.forwardRef(({className:e,...t},o)=>a.jsx(se,{className:f("fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0",e),...t,ref:o}));ge.displayName=se.displayName;const pe=i.forwardRef(({className:e,...t},o)=>a.jsxs(nt,{children:[a.jsx(ge,{}),a.jsx(ie,{ref:o,className:f("fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg",e),...t})]}));pe.displayName=ie.displayName;const fe=({className:e,...t})=>a.jsx("div",{className:f("flex flex-col space-y-2 text-center sm:text-left",e),...t});fe.displayName="AlertDialogHeader";const De=({className:e,...t})=>a.jsx("div",{className:f("flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2",e),...t});De.displayName="AlertDialogFooter";const me=i.forwardRef(({className:e,...t},o)=>a.jsx(de,{ref:o,className:f("text-lg font-semibold",e),...t}));me.displayName=de.displayName;const ve=i.forwardRef(({className:e,...t},o)=>a.jsx(ue,{ref:o,className:f("text-sm text-muted-foreground",e),...t}));ve.displayName=ue.displayName;const xe=i.forwardRef(({className:e,...t},o)=>a.jsx(le,{ref:o,className:f(O(),e),...t}));xe.displayName=le.displayName;const Ae=i.forwardRef(({className:e,...t},o)=>a.jsx(ce,{ref:o,className:f(O({variant:"outline"}),"mt-2 sm:mt-0",e),...t}));Ae.displayName=ce.displayName;function ct({open:e,onClose:t,title:o,onConfirm:r,description:n}){return a.jsx(rt,{open:e,onOpenChange:t,children:a.jsxs(pe,{children:[a.jsxs(fe,{children:[a.jsx(me,{children:o}),a.jsx(ve,{children:n})]}),a.jsxs(De,{children:[a.jsx(Ae,{onClick:t,children:"Cancel"}),a.jsx(xe,{onClick:r,children:"Continue"})]})]})})}export{ct as A};
